"0","```r

theme_map <- 
  theme_linedraw() +
  theme(
    #axis.line=element_blank(),
    axis.text.x=element_blank(),
    axis.text.y=element_blank(),
    axis.ticks=element_blank(),
    axis.title.x=element_blank(),
    axis.title.y=element_blank(),
    #legend.position=\"none\",
    panel.background=element_blank(),
    #panel.border=element_blank(),
    panel.grid.major=element_blank(),
    panel.grid.minor=element_blank(),
    plot.background=element_blank(),
    plot.title = element_text(color=\"dark grey\", size=9, face=\"italic\"),
    legend.position=\"left\"
    )

for (i in sites) {

bbox = get(paste0(i,\"_bbox\"))

map_df = hexbin_agr %>% drop_na() %>% filter(site == i) %>% st_as_sf()

map = 
  ggplot() +
  #geom_sf(data = build,color = \"grey\",size=0.15) +
  #ggmap(sat)+
  geom_sf(data = map_df, fill = NA, col = \"grey\", size = 0.1, fill = NA, alpha = 0.2, inherit.aes = F)+
  geom_sf(data = map_df, aes(fill = pet))+
  scale_colour_gradient(low = \"yellow\", high = \"red\", na.value = NA) +
  geom_sf(data = map_df %>% filter(cv_class == \"top25\"),colour = \"red\", size = 5, fill = NA, alpha = 0.2, inherit.aes = F)+
  xlim(bbox[[\"xmin\"]],bbox[[\"xmax\"]])+
  ylim(bbox[[\"ymin\"]],bbox[[\"ymax\"]])+
  theme_map

assign(paste0(i,\"_hexbin_map\"),map)

rm(map)
rm(bbox)

}
```"
"1","Warning: Duplicated aesthetics after name standardisation: fillWarning: Duplicated aesthetics after name standardisation: fillWarning: Duplicated aesthetics after name standardisation: fillWarning: Duplicated aesthetics after name standardisation: fill
"
"0","```r
quaiplantes_hexbin_map
```"
