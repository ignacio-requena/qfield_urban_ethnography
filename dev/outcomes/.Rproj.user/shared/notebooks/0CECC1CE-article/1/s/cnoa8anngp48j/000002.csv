"0","```r

# Site identification

site = \"ladefense\"
city = \"paris\"
station_mob = \"station2\"
station_ref = \"mfroisy\"

# Mobile station data source
cs = read_excel(here(\"source\",\"clim_cs\",\"defense_paris_station2_track4_2021.xlsx\"))
```"
"1","New names:
"
"0","```r
# meteofrance station data source
mf = read_excel(here(\"source\",\"clim_mf\",\"paris_mfroisy_2021.xlsx\"))
mf = as.data.frame(lapply(mf,as.numeric))
mf = mf %>% rename(STATION = POSTE)

filename = paste0(site,\"_\",city,\"_\",station_mob)
fileid_cs =  paste0(site,\"_\",city,\"_\",station_mob,\"_track\",cs$parcour,\"_\",cs$day_fileid)
fileid_ref =  paste0(site,\"_\",city,\"_\",station_ref,\"_\",substr(first(mf$DATE),start = 1, stop = 4))

# Data importation
## cs
cs = cs %>%
  rename(
    fileid = day_fileid,
    track = parcour,
    device = climat_dev
  )

cs$day_fileid = fileid_cs
cs$site = site
cs$station_mob = as.character(station_mob)

cs$shadow = ifelse(cs$SR01Up_1_Avg <= 200, \"shadow\",\"sun\")
cs$device = gsub('[0-9]+', '', cs$device)
cs$device = gsub('parc_tree_hamac', 'parc_tree', cs$device)
cs$device = gsub('parc_sun', NA, cs$device)
cs$device = gsub('water_fresh_garden', \"parc_axis\", cs$device)
cs$device = gsub('dry_garden', \"parc_axis\", cs$device)
cs$device = gsub('water_cultivated_garden', \"parc_axis\", cs$device)
cs$device = gsub('cultivated_garden', \"parc_axis\", cs$device)

col = c(\"fileid\",\"site\",\"track\",\"device\",\"timestamp\",\"geometry\",\"curv_absc\",\"TagName\",
        \"AirTC_Avg\",\"Temp_C_Avg(1)\",\"Temp_C_Avg(2)\",
        \"RH_Avg\",\"WindDir\",\"WS_ms_Avg\",\"Albedo_1_Avg\",
        \"SR01Up_1_Avg\",\"SR01Dn_1_Avg\",\"IR01UpCo_1_Avg\",\"IR01DnCo_1_Avg\",
        \"SR01Up_2_Avg\",\"SR01Dn_2_Avg\",\"IR01UpCo_2_Avg\",\"IR01DnCo_2_Avg\",
        \"SR01Up_3_Avg\",\"SR01Dn_3_Avg\",\"IR01UpCo_3_Avg\",\"IR01DnCo_3_Avg\", 
        \"T_mrt\",\"T_mrt_SRUp\",\"T_mrt_SRDn\",\"T_mrt_IRUp\",\"T_mrt_IRDn\",\"T_mrt_SRright\",\"T_mrt_SRleft\",\"T_mrt_SRfront\",\"T_mrt_SRback\",\"T_mrt_IRright\",\"T_mrt_IRleft\",\"T_mrt_IRfront\",\"T_mrt_IRback\",\"T_mrt_SRlat\",\"T_mrt_IRlat\",
        #\"delta_TC_12\",\"TC_mean\",
        \"PET\",\"UTCI\"
        )   
cs = cs[,col]

## mf
mf.col <- colnames(mf)
mf.col <- str_to_lower(mf.col)
colnames(mf) <- mf.col
mf = mf %>% rename(timestamp = date)
  
mf$timestamp <- paste0(
  substr(mf$timestamp,1,4),\"-\",
  substr(mf$timestamp,5,6),\"-\",
  substr(mf$timestamp,7,8),\" \",
  substr(mf$timestamp,9,10),\":00:00\")
mf$timestamp <- as.POSIXct(mf$timestamp,format=\"%Y-%m-%d %H:%M:%S\", tz=\"UTC\")

mf$glo <-mf$glo*(1/0.36) #1Wh/m2 = 0,36 J/cm2

### Interpollation
mf <- mf %>% tidyr::complete(timestamp = seq(min(mf$timestamp), max(mf$timestamp),2))
mf <- mf %>% arrange(timestamp)
mf <- mf %>% 
  mutate(t_int = zoo::na.approx(t),
         pstat_int = zoo::na.approx(pstat),
         ff_int = zoo::na.approx(ff),
         dd_int = zoo::na.approx(dd),
         u_int = zoo::na.approx(u),
         glo_int = zoo::na.approx(glo),
         vv_int = zoo::na.approx(vv)
         )

mf$station_ref = as.character(station_ref)

cs_tsmin = min(cs$timestamp)
cs_tsmax = max(cs$timestamp)

mf = mf %>% filter(timestamp >= cs_tsmin & timestamp <= cs_tsmax)

mf = mf %>% 
  dplyr::select(timestamp,station_ref,t_int,u_int,glo_int,ff_int,dd_int,pstat_int,vv_int) %>%
  rename(
  #timestamp = join_date,
  tair = t_int,
  hr = u_int,
  sr = glo_int,
  ws = ff_int,
  wdir = dd_int,
  pstat = pstat_int,
  vv = vv_int,
)

## Join CS & MF

setDT(cs)[, join_date := timestamp]
setDT(mf)[, join_date := timestamp]

df = mf[cs, on = .(join_date), roll = \"nearest\"] # rolling join

# filtering
df = df %>% filter(timestamp >= \"2021-07-20 00:00:00\" & timestamp <= \"2021-07-23 23:59:59\")
#df = df %>% filter(climat_dev == \"qdp07\" | climat_dev == \"qdp08\" | climat_dev == \"qdp09\")

data_list[[length(data_list)+1]]=df

```"
